{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Small unique string."
      },
      "minLength": 3,
      "maxLength": 6
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine 1 Server Name."
      },
      "minLength": 2,
      "maxLength": 9
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The virtual machine server size."
      }
    },
    "vnetGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "vnet": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET"
      }
    },
    "subnet": {
      "type": "string",
      "metadata": {
        "description": "Subnet ID to associate VM to."
      }
    },
    "imagePublisher": {
      "type": "string",
      "metadata": {
        "description": "The OS Publisher"
      },
      "defaultValue": "MicrosoftWindowsServer",
      "allowedValues": [
        "MicrosoftWindowsServer",
        "Canonical"
      ]
    },
    "imageOffer": {
      "type": "string",
      "metadata": {
        "description": "The OS Publisher"
      },
      "defaultValue": "WindowsServer",
      "allowedValues": [
        "WindowsServer",
        "UbuntuServer"
      ]
    },
    "imageSku": {
      "type": "string",
      "metadata": {
        "description": "The SKU for the VM."
      },
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2016-Datacenter-with-Containers",
        "2016-Datacenter",
        "16.04.0-LTS"
      ]
    },
    "diagnosticsStorageName": {
      "type": "string",
      "metadata": {
        "description": "Storage Account Name for Diagnostic Logs"
      }
    },
    "remoteAccessACL": {
      "type": "string",
      "metadata": {
        "description": "Remote Access CIDR"
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "Domain Admin Account Name also used as Local Machine Admin User"
      },
      "minLength": 4
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Domain Admin Account Password also used as Local Machine Admin User Password"
      },
      "minLength": 12
    }
  },
  "variables": {
    "cleanPrefix": "[toLower(parameters('prefix'))]",
    "vmName": "[concat(variables('cleanPrefix'), '-', parameters('vmName'))]",
    "PublicIpName": "[concat(variables('vmName'), '-ip')]",
    "NicName": "[concat(variables('vmName'),'-nic')]",
    "vnetID": "[resourceId(parameters('vnetGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnet'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('subnet'))]",
    "NsgName": "[concat(variables('vmName'), '-nsg')]",
    "NsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NsgName'))]"
  },
  "resources": [
    {
      "comments": "## Public IP Address ##",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('PublicIpName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "Company": "[parameters('prefix')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "comments": "## Network Security Group ##",
      "name": "[concat(variables('NsgName'))]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "tags": {
        "Company": "[parameters('prefix')]"
      },
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "[parameters('remoteAccessACL')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "default-allow-ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "[parameters('remoteAccessACL')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1010,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "comments": "## Network Interface ##",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('NicName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "tags": {
        "Company": "[parameters('prefix')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('PublicIpName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NsgName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgId')]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', parameters('diagnosticsStorageName'), '.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "comments": "## Virtual Machine ##",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "tags": {
        "Company": "[parameters('prefix')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', parameters('diagnosticsStorageName'), '.blob.core.windows.net')]"
          }
        }
      },
      "resources": []
    },
    {
      "comments": "## Auto Shutdown ##",
      "name": "[concat('shutdown-computevm-', variables('vmName'))]",
      "type": "microsoft.devtestlab/schedules",
      "apiVersion": "2016-05-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "status": "Enabled",
        "taskType": "ComputeVmShutdownTask",
        "dailyRecurrence": {
          "time": "1800"
        },
        "timeZoneId": "Central Standard Time",
        "notificationSettings": {
          "status": "Disabled",
          "timeInMinutes": 30
        },
        "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmname'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmname'))]"
      ]
    }
  ],
  "outputs": {
    "virtualMachine": {
      "type": "object",
      "value": {
        "name": "[variables('vmName')]"
      }
    }
  }
}